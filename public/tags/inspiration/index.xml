<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Inspiration on cat /dev/random</title>
    <link>http://prakhar.me/tags/inspiration/</link>
    <description>Recent content in Inspiration on cat /dev/random</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    
    <lastBuildDate>Thu, 02 Oct 2014 12:34:58 AST</lastBuildDate>
    <atom:link href="http://prakhar.me/tags/inspiration/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Just Learn</title>
      <link>http://prakhar.me/articles/just-learn/</link>
      <pubDate>Thu, 02 Oct 2014 12:34:58 AST</pubDate>
      
      <guid>http://prakhar.me/articles/just-learn/</guid>
      <description>&lt;div class=&#34;custom-quote&#34;&gt;
  &lt;h1&gt;&lt;i class=&#34;ion-quote&#34;&gt;&lt;/i&gt;&lt;/h1&gt;


&lt;p&gt; So strangely enough the optimal thing do to in college if you want to be a successful startup founder is not some sort of new, vocational version of college focused on &#34;entrepreneurship.&#34; It&#39;s the classic version of college as education for its own sake. If you want to start a startup after college, what you should do in college is learn powerful things. And if you have genuine intellectual curiosity, that&#39;s what you&#39;ll naturally tend to do if you just follow your own inclinations. &lt;/p&gt;

&lt;p&gt;The component of entrepreneurship that really matters is domain expertise. The way to become Larry Page was to become an expert on search. And the way to become an expert on search was to be driven by genuine curiosity, not some ulterior motive.&lt;/p&gt;

&lt;p&gt;At its best, starting a startup is merely an ulterior motive for curiosity. And you&#39;ll do it best if you introduce the ulterior motive toward the end of the process.&lt;/p&gt;

&lt;p&gt;So here is the ultimate advice for young would-be startup founders, boiled down to two words: &lt;em&gt;just learn.&lt;/em&gt; - &lt;span class=&#34;author&#34;&gt;Paul Graham&lt;/span&gt; &lt;/p&gt;

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Why Do You Want To Do Great Things?</title>
      <link>http://prakhar.me/articles/why-do-you-want-to-do-great-things/</link>
      <pubDate>Thu, 14 Aug 2014 12:34:58 AST</pubDate>
      
      <guid>http://prakhar.me/articles/why-do-you-want-to-do-great-things/</guid>
      <description>&lt;p&gt;During my usual late night lurking on HN today, I came across this gem of a comment and couldn&amp;rsquo;t help sharing it here.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why do you want to do great things? Seriously, dig into it. When I ask a lot of people in startups this question and dig long enough, it comes down to money&amp;ndash; they want to be rich, they want to be free.&lt;/p&gt;

&lt;p&gt;Fact: I&amp;rsquo;ve met these rich/free people and they are largely working their asses off to get more rich (and presumably more free?). The ones who make it (largely) LOVE THE GAME. The few who get rich somehow but don&amp;rsquo;t actually love the game of getting rich are listlessly complaining about being unhappy.&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t love the game, it seems. &lt;strong&gt;The way to be happy/satisfied is to find the game that you love or learn to love the game you&amp;rsquo;re playing. The latter is often what to focus on&amp;ndash; there people with much less interesting jobs that are satisfied with them.&lt;/strong&gt; Whatever job you have, figure out how to be freakin&amp;rsquo; awesome at it and opportunities fall into your lap- trust me. Or be the guy who gets by, can&amp;rsquo;t be happy, is always looking out the window.&lt;/p&gt;

&lt;p&gt;All that said, don&amp;rsquo;t settle for a shitty job. Get one where you&amp;rsquo;re surrounded by people who impress you in an industry/market that has potential. That&amp;rsquo;s where you&amp;rsquo;ll find your next co-founder.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;ve got great ideas, start side projects. They turn into businesses all the time.&lt;/p&gt;

&lt;p&gt;Reduce your burn rate ruthlessly and save $. Seriously, your car/house/clothes are too nice, and you have them because society makes you feel less successful if you don&amp;rsquo;t. Happiness and stuff have virtually no correlation. Get to the point where you&amp;rsquo;re downright smug about your burn rate. Smirk at people who drive BMWs.&lt;/p&gt;

&lt;p&gt;Remember that a million years of evolution has made humanity naturally discontent&amp;ndash; do you think happiness/contentedness is a survival trait? Add to that the external pressure of peers who make it big, do &amp;ldquo;great things&amp;rdquo;, and the river of marketing telling you that you need fancier watches, shinier cars, the newest iPhone. &lt;strong&gt;Being happy/content takes smarts and discipline that most people simply can&amp;rsquo;t manage. Be one of the ones who can&lt;/strong&gt;. - Tony Wright via &lt;a href=&#34;https://news.ycombinator.com/item?id=8177830&#34;&gt;HN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do checkout the rest of the &lt;a href=&#34;https://news.ycombinator.com/item?id=8177259&#34;&gt;discussion&lt;/a&gt;. It&amp;rsquo;s awesome.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>No Excuses</title>
      <link>http://prakhar.me/articles/no-excuses/</link>
      <pubDate>Sat, 31 May 2014 12:34:58 AST</pubDate>
      
      <guid>http://prakhar.me/articles/no-excuses/</guid>
      <description>

&lt;h3 id=&#34;stop-making-excuses-go-build-something:b88914358eb6c6dee8e053191d6b1e49&#34;&gt;Stop Making Excuses. Go Build Something&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The point is, that you can and should teach yourself some new skills. You’re way closer to being employable than I was, that’s for sure. It may take some evenings and weekends, but they’ll be some of the most fun evening and weekends you ever have. Find something that you want to do and build it. Fall in love with the idea, but be ready to dump it for something better. - Scott Patten&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://scottpatten.ca/2012/04/no-excuses.html&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Write Code Everyday</title>
      <link>http://prakhar.me/articles/write-code-everyday/</link>
      <pubDate>Thu, 10 Apr 2014 12:34:58 AST</pubDate>
      
      <guid>http://prakhar.me/articles/write-code-everyday/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;It’s important to note that that I don’t particularly care about the outward perception of the above Github chart. I think that’s the most important take away from this experiment: this is about a change that you’re making in your life for yourself not a change that you’re making to satisfy someone else’s perception of your work. The same goes for any form of dieting or exercise: if you don’t care about improving yourself then you’ll never actually succeed. - John Resig&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Its inspiring to read about how programming greats like &lt;a href=&#34;http://ejohn.org&#34;&gt;John Resig&lt;/a&gt; are struggling with working on side projects and the changes they make to their lifestyle in order to push something meaningful each day.&lt;/p&gt;

&lt;p&gt;I think no matter how experienced or productive one is as a programmer, each of us struggles with the same issues of feeling lazy, bored and occasionally too burnt out to code. What&amp;rsquo;s motivated me most after the post is the fact that if John Resig can work this hard to write code each day so should I.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m currently on a 20 day streak github, which is the highest I&amp;rsquo;ve been on this far. Working on &lt;a href=&#34;http://github.com/a85/newman&#34;&gt;newman&lt;/a&gt; has been both fun and challenging to keep me engaged for 3 weeks. I&amp;rsquo;m quite anxious on how I will keep up the streak post the release but as John says, the important point is to make a change in yourself for something that you care about.&lt;/p&gt;

&lt;p&gt;For those of you who haven&amp;rsquo;t read the blog &lt;a href=&#34;http://ejohn.org/blog/write-code-every-day/&#34;&gt;post&lt;/a&gt;, I&amp;rsquo;d strongly encourage you to do so!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thinking For Programmers</title>
      <link>http://prakhar.me/articles/thinking-for-programmers/</link>
      <pubDate>Sat, 05 Apr 2014 12:34:58 AST</pubDate>
      
      <guid>http://prakhar.me/articles/thinking-for-programmers/</guid>
      <description>&lt;p&gt;Leslie Lamport, the creator the famous Paxos&amp;rsquo; Algorithm and LaTeX, in his paper talks about what programmers are doing wrong?&lt;/p&gt;

&lt;p&gt;Answer: Not thinking enough&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For quite a while, I’ve been disturbed by the emphasis on language in computer science. One result of that emphasis is programmers who are C++ experts but can’t write programs that do what they’re supposed to. The typical computer science response is that programmers need to use the right programming/specification/development language instead of/in addition to C++. The typical industrial response is to provide the programmer with better debugging tools, on the theory that we can obtain good programs by putting a monkey at a keyboard and automatically finding the errors in its code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here&amp;rsquo;s the accompanying &lt;a href=&#34;http://channel9.msdn.com/Events/Build/2014/3-642&#34;&gt;video&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Being A Senior Engineer</title>
      <link>http://prakhar.me/articles/being-a-senior-engineer/</link>
      <pubDate>Mon, 31 Mar 2014 12:34:58 AST</pubDate>
      
      <guid>http://prakhar.me/articles/being-a-senior-engineer/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.kitchensoap.com/2012/10/25/on-being-a-senior-engineer/&#34;&gt;Brilliant article&lt;/a&gt; on what differentiates senior engineers.&lt;/p&gt;

&lt;blockquote&gt;
Every successful engineer I’ve met, upon finishing up a design or getting ready for a project, will continually ask their peers questions along the lines of:

&lt;ul&gt;
    &lt;li&gt;What could I be missing?&lt;/li&gt;
    &lt;li&gt;How will this not work?&lt;/li&gt;
    &lt;li&gt;Will you please shoot as many holes as possible into my thinking on this?&lt;/li&gt;
    &lt;li&gt;Even if it’s technically sound, is it understandable enough for the rest of the organization to operate, troubleshoot, and extend it?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; This is because they know that nothing they make will ever only be in their hands, and that good peer review is what makes better design decisions. As it’s been said elsewhere, they “beg for the bad news.” &lt;/p&gt;

&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Why We Dont Sell Ads</title>
      <link>http://prakhar.me/articles/why-we-dont-sell-ads/</link>
      <pubDate>Thu, 20 Feb 2014 12:34:58 AST</pubDate>
      
      <guid>http://prakhar.me/articles/why-we-dont-sell-ads/</guid>
      <description>&lt;p&gt;I found this great statement made by the WhatsApp founders on their blog about why they don&amp;rsquo;t rely on ads and instead charge customers for the service. This is getting recirculated now that WhatsApp is looking at being acquired by Facebook at a valuation of around $19B. It interesting to see that while tons of apps rely on advertising as a key part of their business model there are companies who strive to go against it. Whats surprising is that their experience of working at an advertising behemoth, Yahoo, strengthened their resolve even more.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Advertising isn’t just the disruption of aesthetics, the insults to your intelligence and the interruption of your train of thought. At every company that sells ads, a significant portion of their engineering team spends their day tuning data mining, writing better code to collect all your personal data, upgrading the servers that hold all the data and making sure it’s all being logged and collated and sliced and packaged and shipped out … And at the end of the day the result of it all is a slightly different advertising banner in your browser or on your mobile screen.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember, when advertising is involved you the user are the product.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;At WhatsApp, our engineers spend all their time fixing bugs, adding new features and ironing out all the little intricacies in our task of bringing rich, affordable, reliable messaging to every phone in the world. That’s our product and that’s our passion. Your data isn’t even in the picture. We are simply not interested in any of it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.whatsapp.com/index.php/2012/06/why-we-dont-sell-ads/&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quantity</title>
      <link>http://prakhar.me/articles/quantity/</link>
      <pubDate>Mon, 10 Feb 2014 12:34:58 AST</pubDate>
      
      <guid>http://prakhar.me/articles/quantity/</guid>
      <description>&lt;p&gt;The ceramics teacher announced on opening day that he was dividing the class into two groups. All those on the left side of the studio, he said, would be graded solely on the quantity of work they produced, all those on the right solely on its quality. His procedure was simple: on the final day of class he would bring in his bathroom scales and weigh the work of the “quantity” group: fifty pound of pots rated an “A”, forty pounds a “B”, and so on. Those being graded on “quality”, however, needed to produce only one pot — albeit a perfect one — to get an “A”.&lt;/p&gt;

&lt;p&gt;Well, came grading time and a curious fact emerged: the works of highest quality were all produced by the group being graded for quantity.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It seems that while the “quantity” group was busily churning out piles of work — and learning from their mistakes — the “quality” group had sat theorizing about perfection, and in the end had little more to show for their efforts than grandiose theories and a pile of dead clay.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/dp/B0042JSQLU/&#34;&gt;Art and Fear&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming is Hard</title>
      <link>http://prakhar.me/articles/programming-is-hard/</link>
      <pubDate>Fri, 07 Feb 2014 12:34:58 AST</pubDate>
      
      <guid>http://prakhar.me/articles/programming-is-hard/</guid>
      <description>&lt;p&gt;When Joe Armstrong, the creator of Erlang, &lt;a href=&#34;http://joearms.github.io/2014/02/07/why-programming-is-difficult.html&#34;&gt;writes a post&lt;/a&gt; on &amp;ldquo;Programming is Hard&amp;rdquo; you cant help but say to yourself - You&amp;rsquo;re not alone!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you’ve got this far, you’ll understand that I think programming is pretty damn difficult. That’s why workplaces are designed to make programming even more difficult. We have open plan offices which provide a noisy environment to break our concentration, mobile phones to disturb us, and internet to distract us.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On the other hand, one cant help but wonder at the power we, programmers, have - power to automate mundane tasks, solve hard problems and hopefully to change the world.&lt;/p&gt;

&lt;p&gt;P.S: To generate this new post, I hacked up a quick &lt;a href=&#34;https://github.com/prakhar1989/prakhar1989.github.com/blob/master/Rakefile&#34;&gt;Rakefile&lt;/a&gt; to create a new post and dev environment for me. Yay for automation (&amp;amp; laziness)!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>